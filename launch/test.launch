<?xml version="1.0"?>
    <launch>
        <!-- TurtleBot3 모델 설정 -->
        <arg name="model" default="waffle_pi"/>
        <param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro'"/>
        <arg name="x_pos" default="0.0"/>
        <arg name="y_pos" default="0.0"/>
        <arg name="z_pos" default="0.2"/>
        <arg name="paused" default="false"/>
        <arg name="use_sim_time" default="true"/>
        <arg name="gui" default="true"/>
        <arg name="headless" default="false"/>
        <arg name="debug" default="false"/>
        <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
        <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
        <arg name="move_forward_only" default="false"/>

        <!-- Gazebo 시뮬레이터 실행 -->
        <!--include file="$(find turtlebot3_gazebo)/launch/turtlebot3_empty_world.launch"/-->


        <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find project_wooyangwoo)/worlds/simple_lib.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
        </include>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" 
      args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description"/>


        <!-- 로봇 상태 퍼블리셔 -->
        <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/-->
        
        <!-- TurtleBot3 -->
        <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
            <arg name="model" value="$(arg model)" />
        </include>

        <!-- SLAM: Gmapping, Cartographer, Hector, Karto, Frontier_exploration, RTAB-Map -->
        <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
            <arg name="model" value="$(arg model)"/>
            <arg name="configuration_basename" value="$(arg configuration_basename)"/>
        </include>

        <!-- move_base -->
        <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
            <arg name="model" value="$(arg model)" />
            <arg name="move_forward_only" value="$(arg move_forward_only)"/>
        </include>

        <!-- AMCL (Adaptive Monte Carlo Localization) 노드 실행 -->
        <!--node pkg="amcl" type="amcl" name="amcl" output="screen">
            <param name="odom_frame_id" value="odom"/>
            <param name="base_frame_id" value="base_footprint"/>
            <param name="global_frame_id" value="map"/>
            <param name="scan_topic" value="scan"/>
            <rosparam file="$(find turtlebot3_navigation)/param/amcl_params.yaml" command="load"/>
        </node-->

        <!-- 네비게이션 노드 실행 -->
        <!--include file="$(find turtlebot3_navigation)/launch/turtlebot3_navigation.launch"/-->

        <!-- RViz 실행 -->
        <node pkg="rviz" type="rviz" name="rviz" required="true"
            args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>

        <!-- explore_lite 실행 트리거 노드 -->
          <!--node pkg="project_wooyangwoo" type="explore_launcher.py" name="explore_launcher" output="screen" launch-prefix="/usr/bin/python3"/-->
    </launch>
